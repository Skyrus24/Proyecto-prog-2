package agendamiento_clinico.gestione;


import agendamiento_clinico.BaseDatos;
import agendamiento_clinico.Grilla;
import javax.swing.JOptionPane;

import javax.swing.JOptionPane;

public class FrmMedicamentos extends javax.swing.JDialog {
    private BaseDatos bd = new BaseDatos();
    private char opc = 'z';
    private Grilla grd = new Grilla();

    public FrmMedicamentos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        if (!this.bd.hayConexion()) {
            JOptionPane.showMessageDialog(null, "Error de conexi贸n con la base de datos");
        }
        this.habilitarCampos(false);
        this.habilitarBotones(true);
        this.actualizarGrilla();
        this.setLocationRelativeTo(null);
    }
    
    private void habilitarCampos(boolean estado) {
        txtNombre.setEnabled(estado);
        txtDescripcion.setEnabled(estado);
        txtDosis.setEnabled(estado);
    }

    private void habilitarBotones(boolean estado) {
        cmdAgregar.setEnabled(estado);
        cmdEliminar.setEnabled(estado);
        cmdModificar.setEnabled(estado);
        cmdGuardar.setEnabled(!estado);
    }

    private void limpiarCampos() {
        txtNombre.setText(null);
        txtDescripcion.setText(null);
        txtDosis.setText(null);
    }

    private void actualizarGrilla() {
        String campos[] = {"id_medicamento", "nombre", "descripcion", "dosis_recomendada"};
        this.grd.cargarGrilla(grdMedicamentos, "medicamentos", campos);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtBuscar = new javax.swing.JTextField();
        cmdAgregar = new javax.swing.JButton();
        cmdModificar = new javax.swing.JButton();
        cmdEliminar = new javax.swing.JButton();
        cmdGuardar = new javax.swing.JButton();
        cmdCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        grdMedicamentos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        txtDosis = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Cambria", 3, 16)); // NOI18N
        jLabel1.setText("Buscar:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(30, 590, 60, 30);

        jLabel4.setFont(new java.awt.Font("Cambria", 3, 16)); // NOI18N
        jLabel4.setText("Descripci贸n");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(30, 70, 150, 30);

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        jPanel1.add(txtNombre);
        txtNombre.setBounds(200, 20, 470, 30);

        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });
        jPanel1.add(txtBuscar);
        txtBuscar.setBounds(100, 590, 760, 30);

        cmdAgregar.setText("Agregar");
        cmdAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(cmdAgregar);
        cmdAgregar.setBounds(40, 250, 80, 30);

        cmdModificar.setText("Modificar");
        cmdModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdModificarActionPerformed(evt);
            }
        });
        jPanel1.add(cmdModificar);
        cmdModificar.setBounds(140, 250, 85, 30);

        cmdEliminar.setText("Eliminar");
        cmdEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(cmdEliminar);
        cmdEliminar.setBounds(240, 250, 77, 30);

        cmdGuardar.setText("Guardar");
        cmdGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(cmdGuardar);
        cmdGuardar.setBounds(330, 250, 76, 30);

        cmdCancelar.setText("Cancelar");
        cmdCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(cmdCancelar);
        cmdCancelar.setBounds(420, 250, 90, 30);

        grdMedicamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Descripci贸n", "Dosis Recomendada"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(grdMedicamentos);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 300, 830, 280);

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane2.setViewportView(txtDescripcion);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(200, 70, 470, 90);

        jLabel5.setFont(new java.awt.Font("Cambria", 3, 16)); // NOI18N
        jLabel5.setText("Nombre");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(30, 20, 90, 30);

        txtDosis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDosisActionPerformed(evt);
            }
        });
        jPanel1.add(txtDosis);
        txtDosis.setBounds(200, 190, 160, 30);

        jLabel6.setFont(new java.awt.Font("Cambria", 3, 16)); // NOI18N
        jLabel6.setText("Dosis Recomendada");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(30, 190, 150, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 882, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        this.grd.filtrarGrilla(grdMedicamentos, this.txtBuscar.getText(), 1);
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void cmdAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAgregarActionPerformed
        this.opc = 'N';
        this.habilitarCampos(true);
        this.habilitarBotones(false);
        this.txtNombre.requestFocus();
    }//GEN-LAST:event_cmdAgregarActionPerformed

    private void cmdModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdModificarActionPerformed
        if (grdMedicamentos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione un medicamento de la lista para modificar.", "Aviso", JOptionPane.WARNING_MESSAGE);
            return; // Detiene la ejecuci贸n si no hay nada seleccionado
        }
        
        this.txtNombre.setText(this.grdMedicamentos.getValueAt(this.grdMedicamentos.getSelectedRow(), 1).toString());
        this.txtDescripcion.setText(this.grdMedicamentos.getValueAt(this.grdMedicamentos.getSelectedRow(), 2).toString());
        this.txtDosis.setText(this.grdMedicamentos.getValueAt(this.grdMedicamentos.getSelectedRow(), 3).toString());
        this.opc = 'M';
        this.habilitarBotones(false);
        this.habilitarCampos(true);
        this.txtNombre.requestFocus();
    }//GEN-LAST:event_cmdModificarActionPerformed

    private void cmdEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEliminarActionPerformed
        if (grdMedicamentos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, 
                "Por favor, seleccione un medicamento de la lista para eliminar.", 
                "Aviso", 
                JOptionPane.WARNING_MESSAGE);
            return; // Detiene la ejecuci贸n
        }

        String idMedicamento = this.grdMedicamentos.getValueAt(
                this.grdMedicamentos.getSelectedRow(), 0).toString();

        bd.borrarRegistro("medicamentos", "id_medicamento=" + idMedicamento);
        this.actualizarGrilla();
    }//GEN-LAST:event_cmdEliminarActionPerformed

    private void cmdGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGuardarActionPerformed
        if(this.opc == 'N'){
            String valores = "'" + this.txtNombre.getText() + "','"
                + this.txtDescripcion.getText() + "','" + this.txtDosis.getText() + "'";
            bd.insertarRegistro("medicamentos(nombre, descripcion, dosis_recomendada)", valores);
        } else {
            String idMedicamento = this.grdMedicamentos.getValueAt(this.grdMedicamentos.getSelectedRow(), 0).toString();
            String campos = "nombre='" + this.txtNombre.getText() + 
                    "', descripcion='" + this.txtDescripcion.getText() + 
                    "', dosis_recomendada='" + this.txtDosis.getText() + "'";
            bd.actualizarRegistro("medicamentos", campos, "id_medicamento=" + idMedicamento);
        }
        this.opc = 'z';
        this.limpiarCampos();
        this.habilitarCampos(false);
        this.habilitarBotones(true);
        this.actualizarGrilla();
    }//GEN-LAST:event_cmdGuardarActionPerformed

    private void cmdCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelarActionPerformed
        this.limpiarCampos();
        this.habilitarCampos(false);
        this.habilitarBotones(true);
    }//GEN-LAST:event_cmdCancelarActionPerformed

    private void txtDosisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDosisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDosisActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMedicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMedicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMedicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMedicamentos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmMedicamentos dialog = new FrmMedicamentos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdAgregar;
    private javax.swing.JButton cmdCancelar;
    private javax.swing.JButton cmdEliminar;
    private javax.swing.JButton cmdGuardar;
    private javax.swing.JButton cmdModificar;
    private javax.swing.JTable grdMedicamentos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtDosis;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
